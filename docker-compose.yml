services:

  curl-client:
    image: alpine:3.19
    container_name: curl_client
    networks:
      - app-network-prod
    depends_on:
      - app
    volumes:
      - ./requisicoes:/home/curl
    command: >
      /bin/sh -c "
      apk add --no-cache curl bash &&
      tail -f /dev/null
      "

  app:
    image: claudioonohara/springgx:local41
    container_name: appgx
    ports:
      - "8080:8080"
    environment:
      - GX_DEFAULT_DB_URL=jdbc:postgresql://postgres_db_prod:5432/projetoPraticoDB
      - GX_DEFAULT_USER_ID=postgres
      - GX_DEFAULT_USER_PASSWORD=prod
      - GX_STORAGE_STORAGE_PROVIDER_ACCESSKEYID=YvFqmqSede+RgA57SJwZ/w==
      - GX_STORAGE_STORAGE_PROVIDER_SECRETACCESSKEY=YvFqmqSede+RgA57SJwZ/w==
      - GX_STORAGE_BUCKET_NAME=NEQl/9xN3VS9LKwVxbH3VQ==
      - GX_DEFAULT_FOLDER_NAME=Content
      - GX_STORAGE_STORAGE_PROVIDER_DEFAULT_ACL=default
      - GX_STORAGE_STORAGE_PROVIDER_DEFAULT_EXPIRATION=600
      - GX_STORAGE_PROVIDER_REGION=us-east-1
      - GX_STORAGE_STORAGE_ENDPOINT=custom
      - GX_STORAGE_STORAGE_CUSTOM_ENDPOINT=http://minioprod:9000
      - GX_CORS_ALLOW_ORIGIN=http://foo.example
      - GX_CORS_ALLOW_CREDENTIALS=true
      - GX_TMPMEDIA_DIR=app/PrivateTempStorage
      - GX_CS_BLOB_PATH=app/PublicTempStorage
    volumes:
      - ./buildexec/PrivateTempStorage:/app/PrivateTempStorage    
      - ./buildexec/PublicTempStorage:/app/PublicTempStorage    
      - ./buildexec/logs:/app/logs    
    depends_on:
      - postgres
      - minioprod
    networks:
      - app-network-prod

  postgres:
    image: postgres:17.4-alpine
    container_name: postgres_db_prod
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=prod
      - POSTGRES_DB=projetoPraticoDB
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
      - ./postgres-config/pg_hba.conf:/etc/postgresql/pg_hba.conf:ro
    networks:
      - app-network-prod

  minioprod:
    image: minio/minio
    container_name: minioprod
    environment:
      MINIO_ROOT_USER: admin123
      MINIO_ROOT_PASSWORD: admin123
      MINIO_ADDRESS: ":9000"
      MINIO_CONSOLE_ADDRESS: ":9001"
      MINIO_BROWSER_REDIRECT_URL: "http://0.0.0.0:9001"
    ports:
      - "0.0.0.0:9000:9000"
      - "0.0.0.0:9001:9001"
    command: server /data --console-address ":9001" --address ":9000"
    volumes:
      - minio_data:/data
      - ./scripts:/scripts
    networks:
      - app-network-prod
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  createbuckets:
    image: minio/mc
    depends_on:
      - minioprod
    environment:
      MINIO_ROOT_USER: admin123
      MINIO_ROOT_PASSWORD: admin123
    entrypoint: >
      /bin/sh -c "
      until (mc config host add myminio http://minioprod:9000 admin123 admin123) do echo '...waiting...' && sleep 1; done;
      mc mb myminio/foto;
      mc policy set public myminio/foto;
      exit 0;
      "

networks:
  app-network-prod:
    driver: bridge

volumes:
  postgres_data:
  minio_data: